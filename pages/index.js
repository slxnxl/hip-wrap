import { Box } from "@chakra-ui/react";
import { Player } from "@lottiefiles/react-lottie-player";
import Head from "next/head";
import React, { Suspense } from "react";
import FilterButton from "../components/filterButton";
import Footer from "../components/footer";
import Grids from "../components/grids";
import styles from "../styles/Home.module.css";
import { pb } from "../utils/pb";

export default function Home(props) {
  const [target, setTarget] = React.useState(0);
  console.log("target ", target);
  console.log("data index: ", props.posts.data[target].name);
  const [renderedPhoto, setRenderedPhoto] = React.useState(false);
  // для лоадера пока ждем загрузку
  // https://nextjs.org/docs/pages/building-your-application/optimizing/lazy-loading
  // const SuspenseComponent = dynamic(
  //   () => import("../components/grids"),
  //   { loading: () => <Skeleton height='200px' isLoaded={renderedPhoto} />,
  //     ssr: false,
  //    }
  // );

  return (
    <div className={styles.container}>
      <Head>
        <title>HIPWRAP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="public/favicon.ico" />
      </Head>
      <main>
        <Box w="100%" h="50vh">
          <Suspense fallback={null}>
            {/* <CarThree></CarThree> */}
            {/*<Car/>*/}
          </Suspense>
        </Box>

        <FilterButton func={setTarget} data={props.posts.data}></FilterButton>
        {/* <Skeleton isLoaded={renderedPhoto} fadeDuration={4} startColor='pink.500' endColor='orange.500'  height='100px'> */}
        {!renderedPhoto && <LoaderElement />}
        <Grids
          isRenderPhoto={setRenderedPhoto}
          target={props.posts.data[target]}
        ></Grids>
        {/* <SuspenseComponent target={props.posts.data[target]}/> */}
        {/* </Skeleton> */}

      </main>
      <Footer adress={123}/>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Create by slxnxl
        </a>
      </footer>
    </div>
  );
}

// запрос данных категорий для фильтра
export async function getStaticProps() {
  try {
    const getRecords = await pb?.collection("services").getFullList({
      sort: "-created",
    });
    // TODO по идее можно переделать без JSON
    const data = JSON.parse(JSON.stringify(getRecords));
    data.unshift({ id: 0, name: "все" });
    return {
      props: {
        // TODO упростить представление потом
        posts: { data },
      }, // will be passed to the page component as props
    };
  } catch (err) {
    console.log("err: ", err);
    return err;
  }
}

function Plug() {
  // Вот сюда gif с загрузкой
  return <Player
    autoplay
    loop
    src="https://lottie.host/3f1693db-8d00-4440-b0f4-54b46ba57620/uc8D8CHXxb.json"
    style={{ height: '100%', backgroundColor: '#F3F5F8' }}
  />
}

function LoaderElement() {
  return <div className="wrapper">
    <div className="net plug">
      <div className="net_first">
        <Plug />
        <Plug />
        <Plug />
      </div>
      {/* <div className="net_second">
        <Plug />
        <Plug />
        <Plug />
        <Plug />
      </div>
      <div className="net_third">
        <Plug />
        <Plug />
        <Plug />
      </div> */}
    </div>
  </div>
}